name: Deploy to Impaas via GHCR

on:
  push:
    branches:
      - main
#      - deployment-test
  workflow_dispatch:  # Allows manual deployment

env:
#  CR_USERNAME: ${{ secrets.ACR_USERNAME }}
#  CR_TOKEN: ${{ secrets.ACR_PASSWORD }}
#  CR_PREFIX: ${{ secrets.ACR_LOGIN_SERVER }}

  CR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  CR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  IMPAAS_TOKEN: ${{secrets.IMPAAS_DEPLOY_TOKEN}}
  TSURU_TARGET: ${{ secrets.TSURU_TARGET }}
  TSURU_TOKEN: ${{ secrets.TSURU_TOKEN }}

  DATABASE_URL: ${{secrets.DATABASE_URL}}
  DATABASE_KEY: ${{secrets.DATABASE_API_KEY}}
  JWT_KEY: ${{secrets.JWT_KEY}}

jobs:
  build-and-test:
    name: Build and Test Microservices
    runs-on: ubuntu-latest
    env:
      CR_PREFIX: ""

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

      - name: Build Microservices with Docker Compose
        run: |
          echo "Building microservices..."
          docker compose -f docker-compose.yml build

      - name: Run Tests
        run: |
          echo "Running tests for each microservices..."
          docker compose -f docker-compose.yml -f docker-compose-test.yml up --abort-on-container-exit

      - name: Stop and Clean Up After Testing
        run: |
          docker compose -f docker-compose.yml down -v

  push-images:
    name: Push Docker Images to GHCR
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo ${{env.CR_TOKEN}} | docker login ghcr.io -u ${{env.CR_USERNAME}} --password-stdin

      - name: Build and Push Images to GHCR
        run: |
          export CR_PREFIX="ghcr.io/${{env.CR_USERNAME}}/"
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml push

#  push-images:
#    name: Push Docker Images to ACR
#    needs: build-and-test
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Log in to Azure Container Registry (ACR)
#        run: |
#          echo ${{ env.CR_TOKEN }} | docker login ${{ env.CR_PREFIX }} --username ${{ env.CR_USERNAME }} --password-stdin
#
#
#      - name: Build and Push Images to ACR
#        run: |
#          export CR_PREFIX=${{ env.CR_PREFIX }}
#          docker compose -f docker-compose.yml build
#          docker compose -f docker-compose.yml push

#  deploy-to-impaas:
#    name: Deploy App Containers to Impaas
#    needs: push-images
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Log in to GitHub Container Registry (GHCR)
#        run: echo ${{env.CR_TOKEN}} | docker login ghcr.io -u ${{env.CR_USERNAME}} --password-stdin
#
#      - name: Install Tsuru CLI
#        run: |
#          curl -fsSL "https://tsuru.io/get" | bash
#          tsuru target add default ${{ env.TSURU_TARGET }} --set-current
#
#      - name: Deploy multiple services to Tsuru
#        env:
#          TSURU_TOKEN: ${{ secrets.TSURU_TOKEN }}
#        run: |
#          export CR_PREFIX="ghcr.io/${{env.CR_USERNAME}}"
#          tsuru app deploy -a auction \
#            --image $CR_PREFIX/frontend:latest \
#            --image $CR_PREFIX/api-gateway:latest \
#            --image $CR_PREFIX/user-service:latest \