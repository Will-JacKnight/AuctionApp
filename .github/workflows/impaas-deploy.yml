name: Deploy to Impaas via GHCR

on:
  push:
    branches:
      - deployment-test
  workflow_dispatch:  # Allows manual deployment

env:
  CR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  CR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  IMPAAS_TOKEN: ${{secrets.IMPAAS_DEPLOY_TOKEN}}
  TSURU_TARGET: ${{ secrets.TSURU_TARGET }}
  TSURU_TOKEN: ${{ secrets.TSURU_TOKEN }}

  DATABASE_URL: ${{secrets.DATABASE_URL}}
  DATABASE_KEY: ${{secrets.DATABASE_API_KEY}}
  JWT_KEY: ${{secrets.JWT_KEY}}

jobs:
  build-and-test:
    name: Build and Test Microservices
    runs-on: ubuntu-latest
    env:
      CR_PREFIX: ""

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Microservices with Docker Compose
        run: |
          echo "Building microservices..."
          docker compose -f docker-compose.yml build

      - name: Run Tests
        run: |
          echo "Running tests for each microservices..."
          docker compose -f docker-compose.yml -f docker-compose-test.yml up --abort-on-container-exit

      - name: Stop and Clean Up After Testing
        run: |
          docker compose -f docker-compose.yml down -v

  push-images:
    name: Push Docker Images to GHCR
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo ${{env.CR_TOKEN}} | docker login ghcr.io -u ${{env.CR_USERNAME}} --password-stdin

      - name: Build and Push Images to GHCR
        run: |
          export CR_PREFIX="ghcr.io/${{env.CR_USERNAME}}/"
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml push

  deploy-to-heroku:
    name: deploy Images to Heroku
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
#      CR_PREFIX: ""
      HEROKU_REGISTRY_PREFIX: "registry.heroku.com/auction-app-sse"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - uses: akhileshns/heroku-deploy@v3.14.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "auction-app-sse" #Must be unique in Heroku
          heroku_email: "jw1524@ic.ac.uk"
          usedocker: true
          justlogin: 'true'

      - name: Build, Tag and push Microservices
        run: |
          echo "Building microservices..."
          docker compose -f docker-compose.yml build
          docker tag frontend ${HEROKU_REGISTRY_PREFIX}/frontend
#          docker tag api-gateway ${HEROKU_REGISTRY_PREFIX}/api-gateway
#          docker tag user-service ${HEROKU_REGISTRY_PREFIX}/user-service
#          docker tag auction-service ${HEROKU_REGISTRY_PREFIX}/auction-service
          docker push ${HEROKU_REGISTRY_PREFIX}/frontend
#          docker push ${HEROKU_REGISTRY_PREFIX}/api-gateway
#          docker push ${HEROKU_REGISTRY_PREFIX}/user-service
#          docker push ${HEROKU_REGISTRY_PREFIX}/auction-service

#      - name: Pull Docker image from GHCR
#        run: |
#          docker pull ghcr.io/${{env.CR_USERNAME}}/frontend:latest
##          docker pull ghcr.io/${{env.CR_USERNAME}}/api-gateway:latest
##          docker pull ghcr.io/${{env.CR_USERNAME}}/user-service:latest
##          docker pull ghcr.io/${{env.CR_USERNAME}}/auction-service:latest

#      - name: Tag Images with Process_type
#        run: |
#          docker tag ghcr.io/${{env.CR_USERNAME}}/frontend registry.heroku.com/auction-app-sse/frontend
##          docker tag ghcr.io/${{env.CR_USERNAME}}/api-gateway registry.heroku.com/auction-app-sse/web
##          docker tag ghcr.io/${{env.CR_USERNAME}}/user-service registry.heroku.com/auction-app-sse/web
##          docker tag ghcr.io/${{env.CR_USERNAME}}/auction-service registry.heroku.com/auction-app-sse/web

      - name: Deploy to Heroku
        run: |
          heroku container:release frontend -a auction-app-sse
#          heroku container:release api-gateway -a auction-app-sse
#          heroku container:release user-service -a auction-app-sse
#          heroku container:release auction-service -a auction-app-sse