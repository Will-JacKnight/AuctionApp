name: Build, Test and Deploy to Heroku

on:
  push:
    branches:
#      - deployment-test
  workflow_dispatch:  # Allows manual deployment

env:
  CR_USERNAME: ${{ secrets.GHCR_USERNAME }}
  CR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  #  IMPAAS_TOKEN: ${{secrets.IMPAAS_DEPLOY_TOKEN}}
  #  TSURU_TARGET: ${{ secrets.TSURU_TARGET }}
  #  TSURU_TOKEN: ${{ secrets.TSURU_TOKEN }}

  SUPABASE_URL: ${{secrets.SUPABASE_URL}}
  SUPABASE_KEY: ${{secrets.SUPABASE_KEY}}
  JWT_KEY: ${{secrets.JWT_KEY}}
  AUCTION_SERVICE_HEROKU_URL: ${{secrets.AUCTION_SERVICE_HEROKU_URL}}
  USER_SERVICE_HEROKU_URL: ${{secrets.USER_SERVICE_HEROKU_URL}}
  API_GATEWAY_HEROKU_URL: ${{secrets.API_GATEWAY_HEROKU_URL}}
  
  

jobs:
  build-and-test:
    name: Build and Test Microservices
    runs-on: ubuntu-latest
    env:
      CR_PREFIX: ""
      RUN_MODE: docker

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Microservices with Docker Compose
        run: |
          echo "Building microservices..."
          docker compose -f docker-compose.yml build

      - name: Run Tests
        run: |
          echo "Running tests for each microservices..."
          docker compose -f docker-compose.yml -f docker-compose-test.yml up --abort-on-container-exit

      - name: Stop and Clean Up After Testing
        run: |
          docker compose -f docker-compose.yml down -v

  push-images:
    name: Push Docker Images to GHCR
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      RUN_MODE: docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo ${{env.CR_TOKEN}} | docker login ghcr.io -u ${{env.CR_USERNAME}} --password-stdin

      - name: Build and Push Images to GHCR
        run: |
          export CR_PREFIX="ghcr.io/${{env.CR_USERNAME}}/"
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml push

  deploy-to-heroku:
    name: deploy Images to Heroku
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      HEROKU_REGISTRY_PREFIX: "registry.heroku.com/bidding-app-sse"
      RUN_MODE: docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Login to docker
        run: |
          echo ${{ secrets.HEROKU_API_KEY }} | docker login --username jw1524@ic.ac.uk --password-stdin registry.heroku.com

      - name: Authenticate with Heroku
        run: |
          echo "machine api.heroku.com login jw1524@ic.ac.uk password ${{ secrets.HEROKU_API_KEY }}" > ~/.netrc
          echo "machine git.heroku.com login jw1524@ic.ac.uk password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc
          chmod 600 ~/.netrc
          heroku auth:token
          heroku auth:whoami

      # - name: Login to Heroku
      #   run: |
      #     echo ${{ secrets.HEROKU_API_KEY }} | heroku auth:token

      # build frontend service as web
      - name: Build, Tag and push Microservices
        run: |
          echo "Building microservices..."
          docker compose -f docker-compose.yml build

          echo "Retag images..."
          docker tag frontend ${HEROKU_REGISTRY_PREFIX}/web 
          docker tag api-gateway ${HEROKU_REGISTRY_PREFIX}/api-gateway
          docker tag user-service ${HEROKU_REGISTRY_PREFIX}/user-service
          docker tag auction-service ${HEROKU_REGISTRY_PREFIX}/auction-service
          
          echo "Push images..."
          docker push ${HEROKU_REGISTRY_PREFIX}/web
          docker push ${HEROKU_REGISTRY_PREFIX}/api-gateway
          docker push ${HEROKU_REGISTRY_PREFIX}/user-service
          docker push ${HEROKU_REGISTRY_PREFIX}/auction-service

      # - name: Debug, List Files Before Heroku Push
      #   run: |
      #     echo "Checking files before Heroku push..."
      #     ls -l ./services/frontend
      #     ls -l ./services/api-gateway
      #     ls -l ./services/user-service
      #     ls -l ./services/auction-service

      # - name: Build, Tag and push Microservices using heroku
      #   run: |
      #     echo "Building microservices using heroku..."
      #     echo "Debug, List Files Before Heroku Push"
      #     docker images
      #     heroku container:push ${HEROKU_REGISTRY_PREFIX}/web --app bidding-app-sse
      #     heroku container:push ${HEROKU_REGISTRY_PREFIX}/api-gateway --app bidding-app-sse
      #     heroku container:push ${HEROKU_REGISTRY_PREFIX}/user-service --app bidding-app-sse
      #     heroku container:push ${HEROKU_REGISTRY_PREFIX}/auction-service --app bidding-app-sse


      # - name: Set Heroku Environment Variables
      #   run: |
      #     heroku config:set -a bidding-app-sse \
      #                       SUPABASE_URL=${{secrets.SUPABASE_URL}} \
      #                       SUPABASE_KEY=${{secrets.SUPABASE_KEY}} \
      #                       JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}} \
      #                       API_GATEWAY_HEROKU_URL=${{secrets.API_GATEWAY_HEROKU_URL}} \
      #                       RUN_MODE=heroku \
                            

      - name: Release pushed images to Heroku
        run: |
          heroku container:release web api-gateway user-service auction-service -a bidding-app-sse

      - name: Scale dynos
        run: |
          heroku ps:scale web=1 api-gateway=1 auction-service=1 user-service=1 -a bidding-app-sse